									TWORZENIE TABEL
CREATE TABLE promotor (PESEL VARCHAR(11) NOT NULL PRIMARY KEY, tytul ENUM('mgr', 'dr', 'prof.') DEFAULT 'prof.', imie VARCHAR(40) NOT NULL,
nazwisko VARCHAR(40) NOT NULL, zarobki INT UNSIGNED DEFAULT 2000, dataur DATE);

CREATE TABLE praca (promotor VARCHAR(11), nr_indeksu VARCHAR(6), tytul_pracy VARCHAR(40), ocena ENUM('ndst', 'dst', 'dst plus', 'db', 'db plus', 'bdb'),
PRIMARY KEY(promotor, tytul_pracy), FOREIGN KEY(promotor) REFERENCES promotor(PESEL) ON DELETE CASCADE);

INSERT INTO promotor(PESEL, imie, nazwisko, dataur) SELECT idKreatury, nazwa, 'Kowalski', dataUr FROM wikingowie.kreatura WHERE rodzaj = 'wiking';

ALTER TABLE praca ALTER COLUMN ocena SET DEFAULT 'dst';

SHOW CREATE TABLE PRACA;
ALTER TABLE praca DROP FOREIGN KEY praca_ibfk_1;
ALTER TABLE praca DROP PRIMARY KEY;
ALTER TABLE praca ADD COLUMN idPracy INT PRIMARY KEY;
_______________________________________________________________________________________________________________________________________________________________________

									ZAPYTANIA
a. SELECT imie, nazwisko FROM zawodnik WHERE klub IS NOT NULL && YEAR(dataUrodzenia) BETWEEN 1990 AND 1999;

b. SELECT miejsce_zawodow.miasto, GROUP_CONCAT(wyniki.idZawodnika, wyniki) FROM wyniki
	JOIN konkurencja ON wyniki.idKonkurencji = konkurencja_idKonkurencji
 	JOIN miejsce_zawodow ON konkurencja.idMiejsca = miejsce_zawodow.idMiejsca
	JOIN kraj ON kraj.idKraju = miejsce_zawodow.idKraju
	WHERE konkurencja.nazwaKonkurencji = 'plywanie' && (kraj.nazwa = 'Niemcy' || kraj.nazwa = 'Czechy' || kraj.nazwa = 'Francja')
	GROUP BY miejsce_zawodow.miasto ORDER BY wyniki ASC;

c. SELECT miejsce_zawodow.miasto, AVG(wyniki.wynik) FROM miejsce_zawodow
	JOIN konkurencja ON miejsce_zawodow.idMiejsca = konkurencja.idMiejsca
	JOIN wyniki ON konkurencja.idKonkurencji = wyniki.idKonkurencji
	WHERE konkurencja.nazwaKonkurencji = 'rower' GROUP BY miejsce_zawodow.idMiejsca;

d. SELECT miejsce_zawodow.nazwa, GROUP_CONCAT(COUNT(zawodnik.idZawodnika), CONCAT(zawodnik.imie, ' ', zawodnik.nazwisko)) FROM miejsce_zawodow
	JOIN konkurencja ON miejsce_zawodow.idMiejsca = konkurencja.idMiejsca
	JOIN wyniki ON konkurencja.idKonkurencji = wyniki.idKonkurencji
	JOIN zawodnik ON wyniki.idZawodnika = zawodnik.idZawodnika
	GROUP BY miejsce_zawodow.idMiejsca;

e. SELECT zawodnik.imie, zawodnik.nazwisko, SUM(wyniki.time) FROM zawodnik
	JOIN wyniki ON zawodnik.idZawodnika = wyniki.idZawodnika
	JOIN konkurencja ON wyniki.idKonkurencji = konkurencja.idKonkurencji
	JOIN miejsce_zawodow ON konkurencja.idMiejsca = miejsce_zawodow.idMiejsca
	WHERE miejsce_zawodow.idKraju = 'Polska' GROUP BY zawodnik.idZawodnika;

f. SELECT zawodnik.imie, zawodnik.nazwisko FROM zawodnik
	JOIN wyniki ON zawodnik.idZawodnika = wyniki.idZawodnika
	JOIN konkurencja ON wyniki.idKonkurencji = konkurencja.idKonkurencji
	JOIN miejsce_zawodow ON konkurencja.idMiejsca = miejsce_zawodow.idMiejsca
	WHERE 

g. 
_______________________________________________________________________________________________________________________________________________________________________

									TABELE DO ZAPYTAN
CREATE TABLE zawodnik (idZawodnika INT NOT NULL AUTO_INCREMENT PRIMARY KEY, imie VARCHAR(45),
nazwisko VARCHAR(45), dataUrodzenia VARCHAR(45), idKraju INT, klub VARCHAR(255));

CREATE TABLE kraj (idKraju INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nazwa VARCHAR(45));
ALTER TABLE zawodnik ADD FOREIGN KEY(idKraju) REFERENCES kraj(idKraju) ON DELETE SET NULL;

CREATE TABLE miejsce_zawodow (idMiejsca INT NOT NULL AUTO_INCREMENT, nazwa VARCHAR(255),miasto VARCHAR(255) NOT NULL, idKraju INT, PRIMARY KEY(idMiejsca, miasto),
FOREIGN KEY(idKraju) REFERENCES kraj(idKraju) ON DELETE SET NULL);

CREATE TABLE konkurencja (idKonkurencji INT NOT NULL AUTO_INCREMENT PRIMARY KEY, nazwaKonkurencji VARCHAR(45), jednostkaMiary VARCHAR(45), idMiejsca INT,
dataKonkurencji DATE, FOREIGN KEY(idMiejsca) REFERENCES miejsce_zawodow(idMiejsca) ON DELETE SET NULL);

CREATE TABLE wyniki (idWyniku INT NOT NULL AUTO_INCREMENT PRIMARY KEY, idZawodnika INT, idKonkurencji INT, wynik TIME,
FOREIGN KEY(idZawodnika) REFERENCES zawodnik(idZawodnika) ON DELETE SET NULL, FOREIGN KEY(idKonkurencji) REFERENCES konkurencja(idKonkurencji) ON DELETE SET NULL);
_______________________________________________________________________________________________________________________________________________________________________

									INSERTY
.
